# -*- coding: utf-8 -*-
"""Cash.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10qZLwwtiQyA5p1VzwIeU8zibXZWoLYFn
"""

import streamlit as st
import pandas as pd
from io import StringIO
from datetime import datetime

st.set_page_config(page_title="Cash XLSX to IIF Converter", layout="centered")
st.title("ðŸ“¥ Convert Cash Sales XLSX to QuickBooks IIF")

uploaded_file = st.file_uploader("Upload the Excel file (.xlsx) of cash sales", type=["xlsx"])

if uploaded_file:
    try:
        df = pd.read_excel(uploaded_file)
        st.success("File uploaded and read successfully!")

        # Preview the uploaded data
        st.subheader("Data Preview")
        st.dataframe(df.head())

        # Validate necessary columns
        required_columns = ["Bill No", "Bill Date", "Amount"]
        if not all(col in df.columns for col in required_columns):
            st.error(f"Missing required columns. Ensure your file contains: {required_columns}")
        else:
            # Process into IIF format
            iif_output = StringIO()
            iif_output.write("!TRNS\tTRNSTYPE\tDATE\tACCNT\tNAME\tMEMO\tAMOUNT\tDOCNUM\n")
            iif_output.write("!SPL\tTRNSTYPE\tDATE\tACCNT\tNAME\tMEMO\tAMOUNT\n")
            iif_output.write("!ENDTRNS\n")

            for _, row in df.iterrows():
                date_str = pd.to_datetime(row["Bill Date"]).strftime("%d/%m/%Y")
                memo = f"Bill {row['Bill No']} (Cash Sale)"
                amount = float(row["Amount"])
                docnum = row['Bill No']

                iif_output.write(f"TRNS\tRECEIPT\t{date_str}\tCash in Drawer\tWalk In\t{memo}\t{amount:.2f}\t{docnum}\n")
                iif_output.write(f"SPL\tRECEIPT\t{date_str}\tAccounts Receivable\tWalk In\t{memo}\t{-amount:.2f}\n")
                iif_output.write("ENDTRNS\n")

            # Prepare file for download
            iif_contents = iif_output.getvalue()
            st.download_button(
                label="ðŸ“¤ Download IIF File",
                data=iif_contents,
                file_name="cash_sales.iif",
                mime="text/plain"
            )
    except Exception as e:
        st.error(f"Failed to process file: {e}")